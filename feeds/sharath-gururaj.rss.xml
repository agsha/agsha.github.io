<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>A Pelican Blog - Sharath Gururaj</title><link>/</link><description></description><lastBuildDate>Mon, 31 Aug 2020 12:22:00 +0000</lastBuildDate><item><title>Cookbook</title><link>/cookbook.html</link><description>&lt;p&gt;This article captures cookbooks or recipes that I don't use frequently enough to remember, but still use it enough to be painful to google from scratch every time I use it. Its a bunch of totally unrelated stuff that is too short to put as a blog article on its …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sharath Gururaj</dc:creator><pubDate>Mon, 31 Aug 2020 12:22:00 +0000</pubDate><guid isPermaLink="false">tag:None,2020-08-31:/cookbook.html</guid><category>misc</category><category>misc</category></item><item><title>The quest for high throughput RPC</title><link>/the-quest-for-high-throughput-rpc.html</link><description>&lt;p&gt;In this post, I compare the rpc throughput of some existing RPC frameworks and talk about a new technique of doing RPC . Dropwizard on a single connection gives around &lt;code&gt;1000 req/sec&lt;/code&gt;, whereas a prototype implementation of this technique gives around &lt;code&gt;4 million req/sec&lt;/code&gt; for a “hello world” rpc …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sharath Gururaj</dc:creator><pubDate>Sat, 07 Jul 2018 00:30:00 +0000</pubDate><guid isPermaLink="false">tag:None,2018-07-07:/the-quest-for-high-throughput-rpc.html</guid><category>misc</category><category>misc</category></item><item><title>Notes about kafka metrics</title><link>/notes-about-kafka-metrics.html</link><description>&lt;h1&gt;Notes about kafka metrics&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Bytes in&lt;/strong&gt; is number of bytes from external producers only. It does not include, for example, the bytes read by followers during replication. So &lt;code&gt;bytes_in = message_produce_rate * average_message_size&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bytes out&lt;/strong&gt; includes data sent to follower also.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sharath Gururaj</dc:creator><pubDate>Tue, 23 Aug 2016 00:30:00 +0000</pubDate><guid isPermaLink="false">tag:None,2016-08-23:/notes-about-kafka-metrics.html</guid><category>misc</category><category>misc</category></item><item><title>A bangalore software engineer's first trip to Bali</title><link>/a-bangalore-software-engineers-first-trip-to-bali.html</link><description>&lt;p&gt;I have just returned from a 8 day trip to Bali. Here are some tips and info, fresh off my mind. These are points that I wish I knew before my trip to Bali, and the tips that I never came across online or on tripadvisor reviews.&lt;/p&gt;
&lt;h3&gt;Flight&lt;/h3&gt;
&lt;p&gt;If you're …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sharath Gururaj</dc:creator><pubDate>Thu, 23 Jun 2016 00:30:00 +0000</pubDate><guid isPermaLink="false">tag:None,2016-06-23:/a-bangalore-software-engineers-first-trip-to-bali.html</guid><category>misc</category><category>misc</category></item><item><title>The affair between iostat and fio</title><link>/the-affair-between-iostat-and-fio.html</link><description>&lt;p&gt;In the following analysis, I'm going to assume you already know what &lt;code&gt;fio&lt;/code&gt; and &lt;code&gt;iostat&lt;/code&gt; is (I'm too lazy to write it down, and there are better articles out there). This post merely explains the relationship between the numbers&lt;/p&gt;
&lt;h3&gt;fio output&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;io = bw*runt
io = iops*runt*bs
issued(r …&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sharath Gururaj</dc:creator><pubDate>Thu, 02 Jun 2016 16:20:00 +0000</pubDate><guid isPermaLink="false">tag:None,2016-06-02:/the-affair-between-iostat-and-fio.html</guid><category>misc</category><category>misc</category></item><item><title>C IDE with vim, cscope and grep (ag)</title><link>/c-ide-with-vim-cscope-and-grep-ag.html</link><description>&lt;h1&gt;Setup Cscope&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;First, Install cscope. &lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Next, you need a &lt;code&gt;cscope.files&lt;/code&gt; with all the files that need to be indexed. In the source folder, you can do that with  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt; &lt;span class="ss"&gt;`pwd`&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;*.c&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;*.cc&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;*.h&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;cscope&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;files&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;the &lt;code&gt;pwd&lt;/code&gt; is needed instead of &lt;code&gt;.&lt;/code&gt; because you need …&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sharath Gururaj</dc:creator><pubDate>Mon, 02 May 2016 22:20:00 +0000</pubDate><guid isPermaLink="false">tag:None,2016-05-02:/c-ide-with-vim-cscope-and-grep-ag.html</guid><category>misc</category><category>misc</category></item><item><title>http and https proxy with squid</title><link>/http-and-https-proxy-with-squid.html</link><description>&lt;h3&gt;On the client machine&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Find out the client subnet of the form &lt;code&gt;10.34.44.0/22&lt;/code&gt;. To do that, on the client machine, run &lt;code&gt;/sbin/ifconfig&lt;/code&gt; to find out the       ip address and subnet mask. with these two pieces of info, you can calculate the CIDR &lt;a href="http://www.subnet-calculator.com/cidr.php"&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;export variables …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sharath Gururaj</dc:creator><pubDate>Wed, 02 Mar 2016 10:20:00 +0000</pubDate><guid isPermaLink="false">tag:None,2016-03-02:/http-and-https-proxy-with-squid.html</guid><category>misc</category><category>regex</category></item><item><title>Regex recipes</title><link>/regex-recipes.html</link><description>&lt;p&gt;I find myself always having to google around a lot for common regex recipes. Surprisingly, the most common cases cannot be easily found without extensive grokking.&lt;/p&gt;
&lt;h3&gt;Python examples&lt;/h3&gt;
&lt;h4&gt;Common special characters:&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;\d&lt;/code&gt;: only digit, &lt;/p&gt;
&lt;h4&gt;Search and replace&lt;/h4&gt;
&lt;p&gt;Search for occurences of a regex string and replace it with something that …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sharath Gururaj</dc:creator><pubDate>Sun, 21 Feb 2016 10:20:00 +0000</pubDate><guid isPermaLink="false">tag:None,2016-02-21:/regex-recipes.html</guid><category>misc</category><category>regex</category></item><item><title>Setting up a ceph cluster</title><link>/setting-up-a-ceph-cluster.html</link><description>&lt;p&gt;The instructions &lt;a href="http://docs.ceph.com/docs/hammer/install/manual-deployment/"&gt;here&lt;/a&gt; mostly work. Except that the &lt;code&gt;ceph.conf&lt;/code&gt; file  given there doesnt work. Because, when I issue &lt;code&gt;sudo /etc/init.d/ceph start mon.node1&lt;/code&gt; in the end, It expects a section in &lt;code&gt;ceph.   conf&lt;/code&gt; called &lt;code&gt;[mon.node1]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Furthermore, to launch a radosgw instance, you &lt;em&gt;need&lt;/em&gt; to have …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sharath Gururaj</dc:creator><pubDate>Sun, 07 Feb 2016 10:20:00 +0000</pubDate><guid isPermaLink="false">tag:None,2016-02-07:/setting-up-a-ceph-cluster.html</guid><category>misc</category><category>ceph</category></item><item><title>I finally setup a blog</title><link>/i-finally-setup-a-blog.html</link><description>&lt;p&gt;&lt;strong&gt;I finally setup my own blog!&lt;/strong&gt; and i'm happy I did it the right way. No lame wordpress. I bought a virtual private server on &lt;a href="www.digitalocean.com"&gt;digital ocean&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;Virtual private server (or a droplet in digitalocean lingo) is a fancy name for your own computer in the cloud, which you can …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sharath Gururaj</dc:creator><pubDate>Tue, 02 Feb 2016 22:20:00 +0000</pubDate><guid isPermaLink="false">tag:None,2016-02-02:/i-finally-setup-a-blog.html</guid><category>misc</category><category>misc</category></item></channel></rss>